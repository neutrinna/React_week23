1. Какую ошибку я допустила в [этом](https://www.notion.so/23-CSS-React-d4b0b61bb697459aacb1681ba2764440?pvs=21) примере? 
- Были задействованы инлайн-стили

2. Какие есть способы работы со стилями в React?
- инлайн-стили;
- подключение css-файлов;
- CSS-модули;
- CSS-препроцессоры.

3. Как будет выглядеть карточка товара, если ей передать атрибут `addedToCart`===0?
- согласно выражению if (addedToCart) {
            actionItem = <AddToCartForm addedToCart={addedToCart} />;
        } else {
            actionItem = <AddToCartButton />;
        }
    отрисуется обычная карточка товара с кнопкой "заказать"

4. Какие ещё проверки нужно было бы сделать для атрибута `addedToCart`?
- не отрицательное ли это число. Число ли вообще. Целое ли

5. Клиент попросил повесить тег «New» на товары из новой коллекции. Как это сделать, какой условный оператор выбрать?
- повесить ТЕГ??? 
Если имелось в виду повесить плашку "New", то необходимо:
- в передаваемыx исходных данных для наполнения карточек передавать также, например, свойство isNew для новых товаров
- включить в описание модуля условный рендеринг. Например, так:

const isNew = props.isNew
let style;
isNew && (style = "new")
....
- добавить к тегу нужного элемента имя класса, определяющего показ плашки:
<Нужный тег className={`... ${style}`}\>
.....
- прописать стили для селектора new

6. Какими тремя способами можно написать условный рендеринг? 
- используя if()
- используя тернарный оператор
- используя &&

7. Представьте, что вы пишете компонент логина. Если пользователь авторизован, то мы показываем его имя, а если нет, то даём возможность ввода логина и пароля. Какой код для этого нужно написать, если за авторизацию пользователя отвечает флаг isAutorized?
    {isAutorized
        ? <Name />
        : <Form/>
    }

8. В чём преимущества использования препроцессоров? Какой ещё есть способ использовать переменные, кроме $ в препроцессорах?
- использование переменных, миксинов и шаблонов
- вложенность (и написание через амперсанд)
- значительное сокращение кода за счет перечисленных свойств

-используя @value